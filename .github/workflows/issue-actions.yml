name: "Issue actions"
on:
  issues:
    types: [opened, reopened]
jobs:

  EPIC:
    if: startsWith(github.event.issue.title, '[EPIC]')
    runs-on: ubuntu-latest
    steps:
    - name: Find Features list
      uses: peter-evans/find-comment@v2
      id: find-features-list
      with:
        issue-number: ${{ github.event.issue.number }}
        body-includes: '### Features'
    - name: Create Features list
      if: steps.find-features-list.outputs.comment-id == ''
      uses: peter-evans/create-or-update-comment@v2
      with:
        issue-number: ${{ github.event.issue.number }}
        body: |
          ### Features

    - name: Find Stories list
      uses: peter-evans/find-comment@v2
      id: find-stories-list
      with:
        issue-number: ${{ github.event.issue.number }}
        body-includes: '### Stories'
    - name: Create Stories list
      if: steps.find-stories-list.outputs.comment-id == ''
      uses: peter-evans/create-or-update-comment@v2
      with:
        issue-number: ${{ github.event.issue.number }}
        body: |
          ### Stories

  FEATURE:
    if: startsWith(github.event.issue.title, '[FEATURE]')
    runs-on: ubuntu-latest
    steps:
    - name: Find Stories list
      uses: peter-evans/find-comment@v2
      id: find-stories-list
      with:
        issue-number: ${{ github.event.issue.number }}
        body-includes: '### Stories'
    - name: Create Stories list
      if: steps.find-stories-list.outputs.comment-id == ''
      uses: peter-evans/create-or-update-comment@v2
      with:
        issue-number: ${{ github.event.issue.number }}
        body: |
          ### Stories

    - name: EPIC - find issue number
      uses: actions-ecosystem/action-regex-match@v2
      id: find-epic-issue-number
      with:
        text: ${{ github.event.issue.body }}
        regex: 'Epic: #(.*)'
    - name: EPIC - find Features list
      uses: peter-evans/find-comment@v2
      id: find-epic-features-list
      with:
        issue-number: ${{ steps.find-epic-issue-number.outputs.group1 }}
        body-includes: '### Features'
    - name: EPIC - create Features comment
      if: steps.find-epic-features-list.outputs.comment-id == ''
      uses: peter-evans/create-or-update-comment@v2
      with:
        issue-number: ${{ steps.find-epic-issue-number.outputs.group1 }}
        body: |
          ### Features
          - #${{ github.event.issue.number }}
    - name: EPIC - update Features list
      if: steps.find-epic-features-list.outputs.comment-id != '' && !contains(steps.find-epic-features-list.outputs.comment-body, format('#{0}', github.event.issue.number))
      uses: peter-evans/create-or-update-comment@v2
      with:
        comment-id: ${{ steps.find-epic-features-list.outputs.comment-id }}
        body: |
          - #${{ github.event.issue.number }}

  STORY:
    if: startsWith(github.event.issue.title, '[STORY]')
    runs-on: ubuntu-latest
    steps:
    
    - name: EPIC - find epic issue number
      uses: actions-ecosystem/action-regex-match@v2
      id: find-epic-issue-number
      with:
        text: ${{ github.event.issue.body }}
        regex: 'Epic: #(.*)'
    - name: EPIC - find Stories list
      uses: peter-evans/find-comment@v2
      id: find-epic-stories-list
      with:
        issue-number: ${{ steps.find-epic-issue-number.outputs.group1 }}
        body-includes: '### Stories'
    - name: EPIC - create Stories list
      if: steps.find-epic-stories-list.outputs.comment-id == ''
      uses: peter-evans/create-or-update-comment@v2
      with:
        issue-number: ${{ steps.find-epic-issue-number.outputs.group1 }}
        body: |
          ### Stories
          - #${{ github.event.issue.number }}
    - name: EPIC - update Stories list
      if: steps.find-epic-stories-list.outputs.comment-id != '' && !contains(steps.find-epic.outputs.comment-body, format('#{0}', github.event.issue.number))
      uses: peter-evans/create-or-update-comment@v2
      with:
        comment-id: ${{ steps.find-epic-stories-list.outputs.comment-id }}
        body: |
          - #${{ github.event.issue.number }}

    - name: FEATURE - find feature issue number
      uses: actions-ecosystem/action-regex-match@v2
      id: find-feature-issue-number
      with:
        text: ${{ github.event.issue.body }}
        regex: 'Feature: #(.*)'
    - name: FEATURE - find Stories list
      uses: peter-evans/find-comment@v2
      id: find-feature-stories-list
      with:
        issue-number: ${{ steps.find-feature-issue-number.outputs.group1 }}
        body-includes: '### Stories'
    - name: FEATURE - create Stories list
      if: steps.find-feature-stories-list.outputs.comment-id == ''
      uses: peter-evans/create-or-update-comment@v2
      with:
        issue-number: ${{ steps.find-feature-issue-number.outputs.group1 }}
        body: |
          ### Stories
          - #${{ github.event.issue.number }}
    - name: FEATURE -update Stories list
      if: steps.find-feature-stories-list.outputs.comment-id != '' && !contains(steps.find-feature-stories-list.outputs.comment-body, format('#{0}', github.event.issue.number))
      uses: peter-evans/create-or-update-comment@v2
      with:
        comment-id: ${{ steps.find-feature-stories-list.outputs.comment-id }}
        body: |
          - #${{ github.event.issue.number }}
