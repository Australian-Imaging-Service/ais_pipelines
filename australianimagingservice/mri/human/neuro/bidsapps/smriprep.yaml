version: &version "0.9.2"
build_iteration: "2"
authors:
  - name: Mahdieh Dashtbani-Moghari
    email: mahdieh.dashtbanimoghari@sydney.edu.au
  - name: Thomas G. Close
    email: thomas.close@sydney.edu.au
base_image:
  name: nipreps/smriprep"
  tag: *version
packages:
  pip: # Copy in local copies of pydra and pydra-dcm2niix
    - pydra
    - pydra-dcm2niix
    - pydra-mrtrix3
  neurodocker: # neurodocker templates freesurfer and fsl are already in smriprep image
    dcm2niix: v1.0.20201102
    mrtrix3: "3.0.2"
licenses:
  freesurfer:
    destination: /opt/freesurfer/license.txt # where in the docker image it should be installed
    info_url: https://surfer.nmr.mgh.harvard.edu/registration.html
    description: >
      `sMRIPRep` uses FreeSurfer tools, which require a license to run.
info_url: https://www.nipreps.org/smriprep/master/index.html
description: "structural MRI data preprocessing pipeline"
long_description: |
  "SMRIPrep: a structural MRI data preprocessing pipeline including Freesurfer"
command:
  task: arcana.tasks.bids:bids_app
  inputs:
    T1w:
      datatype: medimage:NiftiGzX
      help_string: "T1-weighted anatomical scan"
      configuration:
        path: anat/T1w
      default_column:
        datatype: medimage:Dicom
    T2w:
      datatype: medimage:NiftiGzX
      help_string: "T2-weighted anatomical scan"
      configuration:
        path: anat/T2w
      default_column:
        datatype: medimage:Dicom
  outputs:
    smriprep:
      datatype: common:Directory
      configuration:
        path: smriprep
  parameters:
    smriprep_flags:
      field: flags # look at app.py =>id, flag, json edit are the input to wf
      type: str
      help_string: Command line flags passed on directly to sMRIPrep
    json_edits:
      field: json_edits
      type: str
      help_string: >-
        JQ filters (https://devdocs.io/jq/) to apply to JSON side-cars in order to
        handle special cases where the dcm2niix fails to produce valid a BIDS
  row_frequency: session
  configuration:
    name: smriprep
    executable: /opt/conda/bin/smriprep
    dataset: /work/bids-dataset
    app_output_dir: /work/bids-app-output
    app_work_dir: /work/nipype-work  # We need to give a work directory outside of the pydra node as otherwise the file paths exceed Freesurfer's file-path char buffers
